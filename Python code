pip install opencv-contrib-python   #processes the image
!sudo apt install tesseract-ocr      #extracts text and recognises the characters
!pip install pytesseract
# Read the image file
img = cv2.imread('/content/Skoda-Superb-BW-India.jpg')
img = cv2.imread('/content/-number-plates8-1524479911.jpg')
img = cv2.imread('/content/cer_3.jpeg')
img = cv2.imread('/content/car.jpeg')
img = cv2.resize(img, (620,480) )
cv2_imshow(img)
# Convert to Grayscale Image
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
#cv2_imshow(gray)
#Canny Edge Detection
edged = cv2.Canny(gray, 30, 200) #Performing Edge detection
# Finding contours based on Edges
contours=cv2.findContours(edged.copy(),cv2.RETR_TREE,
                                            cv2.CHAIN_APPROX_SIMPLE)
contours = imutils.grab_contours(contours)
contours = sorted(contours,key=cv2.contourArea, reverse = True)[:30]
screenCnt = None
for c in contours:
    # approximating the contour
    peri = cv2.arcLength(c, True)
    approx = cv2.approxPolyDP(c, 0.018 * peri, True)

    if len(approx) == 4:
        screenCnt = approx
        break
# Masking the part other than the number plate
mask = np.zeros(gray.shape,np.uint8)
new_image = cv2.drawContours(mask,[screenCnt],0,255,-1,)
#new_image = cv2.drawContours(mask,[screenCnt],-1,(0,255,0),3)
new_image = cv2.bitwise_and(img,img,mask=mask)
# crop
(x, y) = np.where(mask == 255)
(topx, topy) = (np.min(x), np.min(y))
(bottomx, bottomy) = (np.max(x), np.max(y))
Cropped = gray[topx:bottomx+1, topy:bottomy+1]
#cv2_imshow(Cropped)
text = pytesseract.image_to_string(Cropped, config='--psm 11')
print("Detected license plate Number is:",text)
img = cv2.resize(img,(500,300))
Cropped = cv2.resize(Cropped,(400,200))
print("Original Image")
cv2_imshow(img)
print("Detected License Plate")
cv2_imshow(Cropped)



